{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  id: \"loginBg\"\n};\nconst _hoisted_2 = {\n  name: \"login-form\"\n};\nconst _hoisted_3 = {\n  class: \"mb-3\"\n};\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"email\"\n}, \"Email: \", -1 /* HOISTED */);\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_7 = {\n  class: \"mb-3\"\n};\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"password\"\n}, \"Password: \", -1 /* HOISTED */);\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"form\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_hoisted_4, _hoisted_5, _withDirectives(_createElementVNode(\"input\", {\n    id: \"email\",\n    type: \"email\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.input.email = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.input.email]])]), _hoisted_6, _createElementVNode(\"div\", _hoisted_7, [_hoisted_8, _hoisted_9, _withDirectives(_createElementVNode(\"input\", {\n    id: \"password\",\n    type: \"password\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.input.password = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.input.password]])]), _hoisted_10, _createElementVNode(\"button\", {\n    class: \"btn btn-outline-dark\",\n    type: \"submit\",\n    onClick: _cache[2] || (_cache[2] = _withModifiers($event => $options.login(), [\"prevent\"]))\n  }, \" Login \")])]);\n}","map":{"version":3,"names":["id","name","class","_createElementVNode","for","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","type","_cache","$event","$data","input","email","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","password","_hoisted_10","onClick","_withModifiers","$options","login"],"sources":["C:\\Users\\cedri\\Desktop\\nodejs\\chokbar\\frontend\\src\\components\\LoginView.vue"],"sourcesContent":["<template>\r\n    <div id=\"loginBg\">\r\n    <form name=\"login-form\">\r\n        <div class=\"mb-3\">\r\n            <label for=\"email\">Email: </label>\r\n            <br>\r\n            <input id=\"email\" type=\"email\" v-model=\"input.email\" />\r\n        </div>\r\n        <br>\r\n        <div class=\"mb-3\">\r\n            <label for=\"password\">Password: </label>\r\n            <br>\r\n            <input id=\"password\" type=\"password\" v-model=\"input.password\" />\r\n        </div>\r\n        <br>\r\n        <button class=\"btn btn-outline-dark\" type=\"submit\" v-on:click.prevent=\"login()\">\r\n            Login\r\n        </button>\r\n    </form>\r\n</div>\r\n\r\n\r\n</template>\r\n\r\n<script>\r\nimport { SET_AUTHENTICATION, SET_AUTH_TOKEN, SET_USER_ID,SET_USERNAME, GET_USER_ID } from \"../store/storeconstants\";\r\nimport axios from 'axios'; // Import Axios for making HTTP requests\r\n\r\nexport default {\r\n    name: 'LoginView',\r\n    data() {\r\n        return {\r\n            input: {\r\n                email: \"\", // Changed from username to email to match the API requirement\r\n                password: \"\"\r\n            }\r\n        }\r\n    },\r\n    methods: {\r\n        login() {\r\n            if (this.input.email !== \"\" && this.input.password !== \"\") {\r\n                axios.post('http://localhost:3000/api/auth/login', {\r\n                    email: this.input.email,\r\n                    password: this.input.password\r\n                })\r\n                    .then(response => {\r\n                        this.$store.commit(`auth/${SET_USER_ID}`, response.data.userId);\r\n                        this.$store.commit(`auth/${SET_USERNAME}`, response.data.username);\r\n                        this.$store.commit(`auth/${SET_AUTH_TOKEN}`, response.data.token);\r\n                        this.$store.commit(`auth/${SET_AUTHENTICATION}`, true);\r\n                        console.log(\"Login successful\", response.data);\r\n                        console.log(this.$store.getters[`auth/${GET_USER_ID}`]);\r\n                        //console.log(this.$store.commit(`auth/${GET_USER_ID}`));\r\n\r\n                    })\r\n                    .catch(error => {\r\n                        console.error(\"Login failed\", error.response ? error.response.data : 'Error without response');\r\n                        this.$store.commit(SET_AUTHENTICATION, false);\r\n                    });\r\n            } else {\r\n                console.log(\"Email and Password cannot be empty\");\r\n            }\r\n        }\r\n\r\n    },\r\n}\r\n</script>\r\n\r\n<style>\r\n#loginBg {\r\n    width: 100%;\r\n    height: 100%;\r\n    position: absolute;\r\n    background-color: rgba(0, 0, 0, 0.774);\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%,-50%);\r\n}\r\n</style>"],"mappings":";;EACSA,EAAE,EAAC;AAAS;;EACXC,IAAI,EAAC;AAAY;;EACdC,KAAK,EAAC;AAAM;gCACbC,mBAAA,CAAkC;EAA3BC,GAAG,EAAC;AAAO,GAAC,SAAO;gCAC1BD,mBAAA,CAAI;gCAGRA,mBAAA,CAAI;;EACCD,KAAK,EAAC;AAAM;gCACbC,mBAAA,CAAwC;EAAjCC,GAAG,EAAC;AAAU,GAAC,YAAU;gCAChCD,mBAAA,CAAI;iCAGRA,mBAAA,CAAI;;uBAbRE,mBAAA,CAkBE,OAlBFC,UAkBE,GAjBFH,mBAAA,CAgBO,QAhBPI,UAgBO,GAfHJ,mBAAA,CAIM,OAJNK,UAIM,GAHFC,UAAkC,EAClCC,UAAI,E,gBACJP,mBAAA,CAAuD;IAAhDH,EAAE,EAAC,OAAO;IAACW,IAAI,EAAC,OAAO;IAN1C,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAMoDC,KAAA,CAAAC,KAAK,CAACC,KAAK,GAAAH,MAAA;iDAAXC,KAAA,CAAAC,KAAK,CAACC,KAAK,E,KAEvDC,UAAI,EACJd,mBAAA,CAIM,OAJNe,UAIM,GAHFC,UAAwC,EACxCC,UAAI,E,gBACJjB,mBAAA,CAAgE;IAAzDH,EAAE,EAAC,UAAU;IAACW,IAAI,EAAC,UAAU;IAZhD,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAY0DC,KAAA,CAAAC,KAAK,CAACM,QAAQ,GAAAR,MAAA;iDAAdC,KAAA,CAAAC,KAAK,CAACM,QAAQ,E,KAEhEC,WAAI,EACJnB,mBAAA,CAES;IAFDD,KAAK,EAAC,sBAAsB;IAACS,IAAI,EAAC,QAAQ;IAAMY,OAAK,EAAAX,MAAA,QAAAA,MAAA,MAfrEY,cAAA,CAAAX,MAAA,IAe+EY,QAAA,CAAAC,KAAK;KAAI,SAEhF,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}