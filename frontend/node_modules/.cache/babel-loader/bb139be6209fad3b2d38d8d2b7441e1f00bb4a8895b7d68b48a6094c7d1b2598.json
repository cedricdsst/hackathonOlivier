{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  id: \"loginBg\"\n};\nconst _hoisted_2 = {\n  name: \"login-form\"\n};\nconst _hoisted_3 = {\n  class: \"mb-3 center\"\n};\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_5 = {\n  class: \"mb-3 center\"\n};\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"button\", {\n  class: \"signinBtn\",\n  type: \"submit\"\n}, \" Create Account \", -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = $event => _ctx.$emit('close-login'))\n  }, \"close\"), _createElementVNode(\"form\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_withDirectives(_createElementVNode(\"input\", {\n    id: \"email\",\n    class: \"logInputs\",\n    type: \"email\",\n    placeholder: \"Email\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.input.email = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.input.email]])]), _hoisted_4, _createElementVNode(\"div\", _hoisted_5, [_withDirectives(_createElementVNode(\"input\", {\n    id: \"password\",\n    class: \"logInputs\",\n    type: \"password\",\n    placeholder: \"Password\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.input.password = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.input.password]])]), _hoisted_6, _createElementVNode(\"button\", {\n    class: \"loginBtn\",\n    type: \"submit\",\n    onClick: _cache[3] || (_cache[3] = _withModifiers($event => $options.login(), [\"prevent\"]))\n  }, \" Login \"), _hoisted_7])]);\n}","map":{"version":3,"names":["id","name","class","_createElementVNode","type","_createElementBlock","_hoisted_1","onClick","_cache","$event","_ctx","$emit","_hoisted_2","_hoisted_3","placeholder","$data","input","email","_hoisted_4","_hoisted_5","password","_hoisted_6","_withModifiers","$options","login","_hoisted_7"],"sources":["C:\\Users\\cedri\\Desktop\\nodejs\\chokbar\\frontend\\src\\components\\LoginView.vue"],"sourcesContent":["<template>\r\n    <div id=\"loginBg\">\r\n        <button @click=\"$emit('close-login')\">close</button>\r\n        <form name=\"login-form\">\r\n            <div class=\"mb-3 center\">\r\n\r\n                <input id=\"email\" class=\"logInputs\" type=\"email\" placeholder=\"Email\" v-model=\"input.email\" />\r\n            </div>\r\n            <br>\r\n            <div class=\"mb-3 center\">\r\n\r\n                <input id=\"password\" class=\"logInputs\" type=\"password\" placeholder=\"Password\"\r\n                    v-model=\"input.password\" />\r\n            </div>\r\n            <br>\r\n            <button class=\"loginBtn\" type=\"submit\" v-on:click.prevent=\"login()\">\r\n                Login\r\n            </button>\r\n            <button class=\"signinBtn\" type=\"submit\">\r\n                Create Account\r\n            </button>\r\n        </form>\r\n    </div>\r\n\r\n\r\n</template>\r\n\r\n<script>\r\nimport { SET_AUTHENTICATION, SET_AUTH_TOKEN, SET_USER_ID, SET_USERNAME, GET_USER_ID } from \"../store/storeconstants\";\r\nimport axios from 'axios'; // Import Axios for making HTTP requests\r\n\r\nexport default {\r\n    name: 'LoginView',\r\n    data() {\r\n        return {\r\n            input: {\r\n                email: \"\", // Changed from username to email to match the API requirement\r\n                password: \"\"\r\n            }\r\n        }\r\n    },\r\n    methods: {\r\n        login() {\r\n            if (this.input.email !== \"\" && this.input.password !== \"\") {\r\n                axios.post('http://localhost:3000/api/auth/login', {\r\n                    email: this.input.email,\r\n                    password: this.input.password\r\n                })\r\n                    .then(response => {\r\n                        this.$store.commit(`auth/${SET_USER_ID}`, response.data.userId);\r\n                        this.$store.commit(`auth/${SET_USERNAME}`, response.data.username);\r\n                        this.$store.commit(`auth/${SET_AUTH_TOKEN}`, response.data.token);\r\n                        this.$store.commit(`auth/${SET_AUTHENTICATION}`, true);\r\n                        console.log(\"Login successful\", response.data);\r\n                        console.log(this.$store.getters[`auth/${GET_USER_ID}`]);\r\n                        //console.log(this.$store.commit(`auth/${GET_USER_ID}`));\r\n                        this.$emit('close-login');\r\n                    })\r\n                    .catch(error => {\r\n                        console.error(\"Login failed\", error.response ? error.response.data : 'Error without response');\r\n                        this.$store.commit(SET_AUTHENTICATION, false);\r\n                    });\r\n            } else {\r\n                console.log(\"Email and Password cannot be empty\");\r\n            }\r\n        }\r\n\r\n    },\r\n}\r\n</script>\r\n\r\n<style>\r\n#loginBg {\r\n    width: 100%;\r\n    height: 100%;\r\n    position: absolute;\r\n    background-color: rgba(0, 0, 0, 0.774);\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n}\r\n\r\nform {\r\n    width: 329px;\r\n    height: 393px;\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-around;\r\n    margin: 0 auto;\r\n    align-items: center;\r\n    background-color: #15202B;\r\n    padding: 20px;\r\n    border-radius: 15px;\r\n    border: solid 0.5px #70A0B5;\r\n}\r\n\r\n.center {\r\n    display: flex;\r\n    justify-content: center;\r\n}\r\n\r\n.logInputs {\r\n    background-color: #d9d9d948;\r\n    border: none;\r\n    border-radius: 25px;\r\n    color: white;\r\n    font-family: Arial, sans-serif;\r\n    font-size: 16px;\r\n    padding: 10px 20px;\r\n    width: 270px;\r\n    box-sizing: border-box;\r\n}\r\n\r\n.logInputs::placeholder {\r\n    color: #A9A9A9;\r\n    opacity: 1;\r\n}\r\n\r\n.logInputs:focus {\r\n    outline: none;\r\n}\r\n\r\n.loginBtn {\r\n    height: 52px;\r\n    width: 170px;\r\n    background-color: #3B984A;\r\n    color: white;\r\n    font-size: 16px;\r\n    font-weight: bold;\r\n    border: 0px;\r\n    border-radius: 5px;\r\n}\r\n\r\n.signinBtn {\r\n    height: 52px;\r\n    width: 170px;\r\n    background-color: #3b984a00;\r\n    color: #3B984A;\r\n    font-weight: bold;\r\n    font-size: 16px;\r\n    border: solid 5px #3B984A;\r\n    border-radius: 5px;\r\n}\r\n</style>"],"mappings":";;EACSA,EAAE,EAAC;AAAS;;EAEPC,IAAI,EAAC;AAAY;;EACdC,KAAK,EAAC;AAAa;gCAIxBC,mBAAA,CAAI;;EACCD,KAAK,EAAC;AAAa;gCAKxBC,mBAAA,CAAI;gCAIJA,mBAAA,CAES;EAFDD,KAAK,EAAC,WAAW;EAACE,IAAI,EAAC;GAAS,kBAExC;;uBAnBRC,mBAAA,CAqBM,OArBNC,UAqBM,GApBFH,mBAAA,CAAoD;IAA3CI,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,IAAA,CAAAC,KAAK;KAAiB,OAAK,GAC3CR,mBAAA,CAkBO,QAlBPS,UAkBO,GAjBHT,mBAAA,CAGM,OAHNU,UAGM,G,gBADFV,mBAAA,CAA6F;IAAtFH,EAAE,EAAC,OAAO;IAACE,KAAK,EAAC,WAAW;IAACE,IAAI,EAAC,OAAO;IAACU,WAAW,EAAC,OAAO;IANpF,uBAAAN,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAM8FM,KAAA,CAAAC,KAAK,CAACC,KAAK,GAAAR,MAAA;iDAAXM,KAAA,CAAAC,KAAK,CAACC,KAAK,E,KAE7FC,UAAI,EACJf,mBAAA,CAIM,OAJNgB,UAIM,G,gBAFFhB,mBAAA,CAC+B;IADxBH,EAAE,EAAC,UAAU;IAACE,KAAK,EAAC,WAAW;IAACE,IAAI,EAAC,UAAU;IAACU,WAAW,EAAC,UAAU;IAX7F,uBAAAN,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAY6BM,KAAA,CAAAC,KAAK,CAACI,QAAQ,GAAAX,MAAA;iDAAdM,KAAA,CAAAC,KAAK,CAACI,QAAQ,E,KAE/BC,UAAI,EACJlB,mBAAA,CAES;IAFDD,KAAK,EAAC,UAAU;IAACE,IAAI,EAAC,QAAQ;IAAMG,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAf7Dc,cAAA,CAAAb,MAAA,IAeuEc,QAAA,CAAAC,KAAK;KAAI,SAEpE,GACAC,UAES,C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}