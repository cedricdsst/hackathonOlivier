{"ast":null,"code":"import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createVNode as _createVNode, Fragment as _Fragment, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_LoginView = _resolveComponent(\"LoginView\");\n  const _component_SignupView = _resolveComponent(\"SignupView\");\n  const _component_NavBar = _resolveComponent(\"NavBar\");\n  const _component_RouterView = _resolveComponent(\"RouterView\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [$data.showLoginOverlay ? (_openBlock(), _createBlock(_component_LoginView, {\n    key: 0,\n    onCloseLogin: _cache[0] || (_cache[0] = $event => $data.showLoginOverlay = false),\n    onToggleSignup: $options.toggleSignupOverlay\n  }, null, 8 /* PROPS */, [\"onToggleSignup\"])) : _createCommentVNode(\"v-if\", true), $data.showSignupOverlay ? (_openBlock(), _createBlock(_component_SignupView, {\n    key: 1,\n    onCloseSignup: _cache[1] || (_cache[1] = $event => $data.showSignupOverlay = false)\n  })) : _createCommentVNode(\"v-if\", true), _createVNode(_component_NavBar, {\n    onToggleLogin: $options.toggleLoginOverlay,\n    onToggleSignup: $options.toggleSignupOverlay\n  }, null, 8 /* PROPS */, [\"onToggleLogin\", \"onToggleSignup\"]), _createVNode(_component_RouterView)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementBlock","_Fragment","$data","showLoginOverlay","_createBlock","_component_LoginView","key","onCloseLogin","_cache","$event","onToggleSignup","$options","toggleSignupOverlay","_createCommentVNode","showSignupOverlay","_component_SignupView","onCloseSignup","_createVNode","_component_NavBar","onToggleLogin","toggleLoginOverlay","_component_RouterView"],"sources":["C:\\Users\\cedric\\Desktop\\coursNodeJs\\chokbar\\frontend\\src\\App.vue"],"sourcesContent":["<template>\r\n  <LoginView v-if=\"showLoginOverlay\" @close-login=\"showLoginOverlay = false\" @toggle-signup=\"toggleSignupOverlay\" />\r\n  <SignupView v-if=\"showSignupOverlay\" @close-signup=\"showSignupOverlay = false\" />\r\n  <NavBar @toggle-login=\"toggleLoginOverlay\" @toggle-signup=\"toggleSignupOverlay\" />\r\n  <RouterView />\r\n</template>\r\n\r\n<script>\r\nimport NavBar from './components/NavBar.vue'\r\nimport LoginView from './components/LoginView.vue';\r\nimport SignupView from './components/SignupView.vue';\r\n\r\nexport default {\r\n  name: 'App',\r\n  components: {\r\n    // HelloWorld,\r\n    NavBar,\r\n    LoginView,\r\n    SignupView\r\n  },\r\n  data() {\r\n    return {\r\n      showLoginOverlay: false,\r\n      showSignupOverlay: false,\r\n    }\r\n  },\r\n  methods: {\r\n    toggleLoginOverlay() {\r\n      this.showLoginOverlay = !this.showLoginOverlay;\r\n    },\r\n    toggleSignupOverlay() {\r\n      this.showSignupOverlay = !this.showSignupOverlay;\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\nbody,\r\nhtml {\r\n  margin: 0;\r\n  padding: 0;\r\n  height: 100%;\r\n  width: 100%;\r\n}\r\n\r\n#app {\r\n  display: flex;\r\n  /* Use flex display for direct children layout */\r\n  height: 100vh;\r\n  /* Full viewport height */\r\n  width: 100vw;\r\n  /* Full viewport width */\r\n  font-family: Avenir, Helvetica, Arial, sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  text-align: center;\r\n  color: white;\r\n  background-color: #15202B;\r\n}\r\n\r\n\r\n\r\n/* Style for RouterView content */\r\n.router-view {\r\n  flex: 1;\r\n  /* Takes the remaining space */\r\n  overflow-y: auto;\r\n  /* Allows scrolling if content overflows */\r\n}\r\n</style>\r\n"],"mappings":";;;;;;uBAAAA,mBAAA,CAAAC,SAAA,SACmBC,KAAA,CAAAC,gBAAgB,I,cAAjCC,YAAA,CAAkHC,oBAAA;IADpHC,GAAA;IACsCC,YAAW,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEP,KAAA,CAAAC,gBAAgB;IAAWO,cAAa,EAAEC,QAAA,CAAAC;iDAD7FC,mBAAA,gBAEoBX,KAAA,CAAAY,iBAAiB,I,cAAnCV,YAAA,CAAiFW,qBAAA;IAFnFT,GAAA;IAEwCU,aAAY,EAAAR,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEP,KAAA,CAAAY,iBAAiB;QAFvED,mBAAA,gBAGEI,YAAA,CAAkFC,iBAAA;IAAzEC,aAAY,EAAER,QAAA,CAAAS,kBAAkB;IAAGV,cAAa,EAAEC,QAAA,CAAAC;gEAC3DK,YAAA,CAAcI,qBAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}