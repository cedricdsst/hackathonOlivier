{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"LOGO\", -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_font_awesome_icon = _resolveComponent(\"font-awesome-icon\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"nav\", null, [_createVNode(_component_font_awesome_icon, {\n    icon: ['far', 'user']\n  }), _hoisted_1, _createElementVNode(\"h3\", null, \"Welcome \" + _toDisplayString($options.getUsername()), 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = $event => _ctx.$emit('toggle-login'))\n  }, \"Log In\")])]);\n}","map":{"version":3,"names":["_createElementVNode","_createElementBlock","_createVNode","_component_font_awesome_icon","icon","_hoisted_1","_toDisplayString","$options","getUsername","onClick","_cache","$event","_ctx","$emit"],"sources":["C:\\Users\\cedri\\Desktop\\nodejs\\chokbar\\frontend\\src\\components\\NavBar.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <nav>\r\n            <font-awesome-icon :icon=\"['far', 'user']\" />\r\n            <h1>LOGO</h1>\r\n            <h3>Welcome {{ getUsername() }}</h3>\r\n            <button @click=\"$emit('toggle-login')\">Log In</button>\r\n\r\n        </nav>\r\n\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { GET_USERNAME } from \"../store/storeconstants\";\r\n\r\n\r\nexport default {\r\n    name: 'WelcomeView',\r\n    components: {\r\n\r\n    },\r\n    computed: {\r\n        username() {\r\n            return this.$store.getters[`auth/${GET_USERNAME}`];\r\n        }\r\n    },\r\n    methods: {\r\n        getUsername() {\r\n            return this.username;\r\n        }\r\n    },\r\n    watch: {\r\n        // Automatically hide the login form when authentication state changes\r\n        username(newVal) {\r\n            if (newVal) {\r\n                this.showLogin = false;\r\n            }\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n/* Style for NavBar component */\r\nnav {\r\n    flex: 0 0 250px;\r\n    /* Adjust as necessary, sets the base width of the navbar */\r\n    height: 100%;\r\n    /* Full height of its parent */\r\n    width: 250px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    /* Align items vertically */\r\n    justify-content: start;\r\n    /* Align items to the start of the flex direction */\r\n    text-align: left;\r\n    /* Align text to the left */\r\n    background-color: #15202B;\r\n    /* Just an example, adjust the color as needed */\r\n    padding-left: 15px;\r\n}\r\n</style>\r\n"],"mappings":";gCAIYA,mBAAA,CAAa,YAAT,MAAI;;;uBAHhBC,mBAAA,CASM,cARFD,mBAAA,CAMM,cALFE,YAAA,CAA6CC,4BAAA;IAAzBC,IAAI,EAAE;EAAe,IACzCC,UAAa,EACbL,mBAAA,CAAoC,YAAhC,UAAQ,GAAAM,gBAAA,CAAGC,QAAA,CAAAC,WAAW,oBAC1BR,mBAAA,CAAsD;IAA7CS,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,IAAA,CAAAC,KAAK;KAAkB,QAAM,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}