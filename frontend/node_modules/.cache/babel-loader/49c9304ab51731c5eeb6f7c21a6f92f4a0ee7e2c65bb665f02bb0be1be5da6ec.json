{"ast":null,"code":"import axios from 'axios'; // Import Axios for making HTTP requests\n\nexport default {\n  name: 'LoginView',\n  data() {\n    return {\n      email: \"\",\n      // Changed from username to email to match the API requirement\n      password: \"\"\n    };\n  },\n  methods: {\n    login() {\n      // Make sure email OR password are not empty\n      if (this.input.email !== \"\" || this.input.password !== \"\") {\n        // Attempt to log in\n        axios.post('http://localhost:3000/api/auth/login', {\n          // Adjust '/api/login' to your actual API endpoint\n          body: {\n            email: this.input.email,\n            password: this.input.password\n          }\n        }).then(response => {\n          console.log(\"Login successful\", response.data);\n          // Here you could redirect the user or do other actions upon successful login\n        }).catch(error => {\n          console.error(\"Login failed\", error.response.data);\n          // Handle errors here, such as showing a notification to the user\n        });\n      } else {\n        console.log(\"Email and Password cannot be empty\");\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","email","password","methods","login","input","post","body","then","response","console","log","catch","error"],"sources":["C:\\Users\\cedri\\Desktop\\nodejs\\apiProject\\frontend\\src\\components\\LoginView.vue"],"sourcesContent":["<template>\r\n    <form name=\"login-form\">\r\n        <div class=\"mb-3\">\r\n            <label for=\"username\">Username: </label>\r\n            <br>\r\n            <input id=\"username\" type=\"text\" v-model=\"input.email\" />\r\n        </div>\r\n        <br>\r\n        <div class=\"mb-3\">\r\n            <label for=\"password\">Password: </label>\r\n            <br>\r\n            <input id=\"password\" type=\"password\" v-model=\"input.password\" />\r\n        </div>\r\n        <br>\r\n        <button class=\"btn btn-outline-dark\" type=\"submit\" v-on:click.prevent=\"login()\">\r\n            Login\r\n        </button>\r\n    </form>\r\n\r\n\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'; // Import Axios for making HTTP requests\r\n\r\nexport default {\r\n    name: 'LoginView',\r\n    data() {\r\n        return {\r\n\r\n            email: \"\", // Changed from username to email to match the API requirement\r\n            password: \"\"\r\n\r\n        }\r\n    },\r\n    methods: {\r\n        login() {\r\n            // Make sure email OR password are not empty\r\n            if (this.input.email !== \"\" || this.input.password !== \"\") {\r\n                // Attempt to log in\r\n                axios.post('http://localhost:3000/api/auth/login', { // Adjust '/api/login' to your actual API endpoint\r\n                    body: {\r\n                        email: this.input.email,\r\n                        password: this.input.password\r\n                    }\r\n\r\n                })\r\n                    .then(response => {\r\n                        console.log(\"Login successful\", response.data);\r\n                        // Here you could redirect the user or do other actions upon successful login\r\n                    })\r\n                    .catch(error => {\r\n                        console.error(\"Login failed\", error.response.data);\r\n                        // Handle errors here, such as showing a notification to the user\r\n                    });\r\n            } else {\r\n                console.log(\"Email and Password cannot be empty\");\r\n            }\r\n        }\r\n    },\r\n}\r\n</script>"],"mappings":"AAuBA,OAAOA,KAAI,MAAO,OAAO,EAAE;;AAE3B,eAAe;EACXC,IAAI,EAAE,WAAW;EACjBC,IAAIA,CAAA,EAAG;IACH,OAAO;MAEHC,KAAK,EAAE,EAAE;MAAE;MACXC,QAAQ,EAAE;IAEd;EACJ,CAAC;EACDC,OAAO,EAAE;IACLC,KAAKA,CAAA,EAAG;MACJ;MACA,IAAI,IAAI,CAACC,KAAK,CAACJ,KAAI,KAAM,EAAC,IAAK,IAAI,CAACI,KAAK,CAACH,QAAO,KAAM,EAAE,EAAE;QACvD;QACAJ,KAAK,CAACQ,IAAI,CAAC,sCAAsC,EAAE;UAAE;UACjDC,IAAI,EAAE;YACFN,KAAK,EAAE,IAAI,CAACI,KAAK,CAACJ,KAAK;YACvBC,QAAQ,EAAE,IAAI,CAACG,KAAK,CAACH;UACzB;QAEJ,CAAC,EACIM,IAAI,CAACC,QAAO,IAAK;UACdC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEF,QAAQ,CAACT,IAAI,CAAC;UAC9C;QACJ,CAAC,EACAY,KAAK,CAACC,KAAI,IAAK;UACZH,OAAO,CAACG,KAAK,CAAC,cAAc,EAAEA,KAAK,CAACJ,QAAQ,CAACT,IAAI,CAAC;UAClD;QACJ,CAAC,CAAC;MACV,OAAO;QACHU,OAAO,CAACC,GAAG,CAAC,oCAAoC,CAAC;MACrD;IACJ;EACJ;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}